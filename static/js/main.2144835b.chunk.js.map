{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","pattern","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","toString","NewMovie","onAdd","count","setCount","titleValue","setTitleValue","descriptionValue","setDescriptionValue","imgUrlValue","setImgUrlValue","imbdUrlValue","setImbdUrlValue","imbdIdValue","setImbdIdValue","onSubmit","preventDefault","trim","prevCount","disabled","App","moviesFromServer","preparedMovies","setPreparedMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2144835b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  pattern?: object\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  // eslint-disable-next-line max-len\n  pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/,\n}) => {\n  // generate a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n          pattern={\n            name === 'imdbUrl' || name === 'imgUrl'\n              ? pattern.toString()\n              : '[A-Za-z0-9]+'\n          }\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n\n  const [titleValue, setTitleValue] = useState('');\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [imgUrlValue, setImgUrlValue] = useState('');\n  const [imbdUrlValue, setImbdUrlValue] = useState('');\n  const [imbdIdValue, setImbdIdValue] = useState('');\n\n  const increaseCount = () => {\n    setCount((prevCount) => {\n      const counter = prevCount + 1;\n\n      return counter;\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!titleValue.trim() || !imgUrlValue.trim()\n    || !imbdIdValue.trim() || !imbdUrlValue.trim()) {\n      return;\n    }\n\n    onAdd({\n      title: titleValue,\n      imgUrl: imgUrlValue,\n      imdbUrl: imbdUrlValue,\n      imdbId: imbdIdValue,\n      description: descriptionValue,\n    });\n\n    increaseCount();\n    setTitleValue('');\n    setImgUrlValue('');\n    setImbdUrlValue('');\n    setImbdIdValue('');\n    setDescriptionValue('');\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={titleValue}\n        onChange={(value) => setTitleValue(value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={descriptionValue}\n        onChange={(value) => setDescriptionValue(value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrlValue}\n        onChange={(value) => setImgUrlValue(value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imbdUrlValue}\n        onChange={(value) => setImbdUrlValue(value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imbdIdValue}\n        onChange={(value) => setImbdIdValue(value)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={\n              !titleValue.trim() || !imgUrlValue.trim()\n              || !imbdIdValue.trim() || !imbdUrlValue.trim()\n            }\n          >\n            Add\n          </button>\n\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [preparedMovies, setPreparedMovies] = useState(moviesFromServer);\n\n  const onAdd = (movie: Movie) => {\n    setPreparedMovies([...preparedMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={preparedMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}